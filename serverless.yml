service: sls-notes-backend
frameworkVersion: '3'
custom:
  tableName: 'NotesTable-${sls:stage}'
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - X-Amz-Date
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
    - app_user_id
    - app_user_name
  customDomain:
    domainName: api.notesapp.xyz
    basePath: 'v1'
    stage: ${self:provider.stage}
    certificateName: notesapp.xyz
    createRoute53Record: true
    
provider:
  name: aws
  runtime: nodejs14.x
  region: ap-south-1
  stage: prod
  memorySize: 128
  timeout: 5
  endpointType: regional
  environment:
    NOTES_TABLE: '${self:custom.tableName}'

functions:
  add-note:
    handler: api/add-note.handler
    description: POST /note
    events:
      - http:
          path: note
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}   
resources:
  Resources:
    UsersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: 'N'
          - AttributeName: note_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: note_id-index
            KeySchema:
              - AttributeName: note_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
